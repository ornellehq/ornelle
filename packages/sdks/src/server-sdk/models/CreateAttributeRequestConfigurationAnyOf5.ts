/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateAttributeRequestConfigurationAnyOf5
 */
export interface CreateAttributeRequestConfigurationAnyOf5 {
    /**
     * 
     * @type {string}
     * @memberof CreateAttributeRequestConfigurationAnyOf5
     */
    type?: CreateAttributeRequestConfigurationAnyOf5TypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateAttributeRequestConfigurationAnyOf5
     */
    showFullUrl: boolean;
}

/**
* @export
* @enum {string}
*/
export enum CreateAttributeRequestConfigurationAnyOf5TypeEnum {
    Url = 'URL'
}


/**
 * Check if a given object implements the CreateAttributeRequestConfigurationAnyOf5 interface.
 */
export function instanceOfCreateAttributeRequestConfigurationAnyOf5(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "showFullUrl" in value;

    return isInstance;
}

export function CreateAttributeRequestConfigurationAnyOf5FromJSON(json: any): CreateAttributeRequestConfigurationAnyOf5 {
    return CreateAttributeRequestConfigurationAnyOf5FromJSONTyped(json, false);
}

export function CreateAttributeRequestConfigurationAnyOf5FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAttributeRequestConfigurationAnyOf5 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'showFullUrl': json['showFullUrl'],
    };
}

export function CreateAttributeRequestConfigurationAnyOf5ToJSON(value?: CreateAttributeRequestConfigurationAnyOf5 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'showFullUrl': value.showFullUrl,
    };
}

