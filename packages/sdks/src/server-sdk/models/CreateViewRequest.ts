/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateViewRequest
 */
export interface CreateViewRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateViewRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateViewRequest
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateViewRequest
     */
    _public: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreateViewRequest
     */
    entityType: CreateViewRequestEntityTypeEnum;
    /**
     * 
     * @type {any}
     * @memberof CreateViewRequest
     */
    config: any | null;
}

/**
* @export
* @enum {string}
*/
export enum CreateViewRequestEntityTypeEnum {
    Role = 'Role',
    Opening = 'Opening',
    Application = 'Application',
    Candidate = 'Candidate',
    Custom = 'Custom'
}


/**
 * Check if a given object implements the CreateViewRequest interface.
 */
export function instanceOfCreateViewRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "_public" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "config" in value;

    return isInstance;
}

export function CreateViewRequestFromJSON(json: any): CreateViewRequest {
    return CreateViewRequestFromJSONTyped(json, false);
}

export function CreateViewRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateViewRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        '_public': json['public'],
        'entityType': json['entityType'],
        'config': json['config'],
    };
}

export function CreateViewRequestToJSON(value?: CreateViewRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'public': value._public,
        'entityType': value.entityType,
        'config': value.config,
    };
}

