/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateActivityRequest
 */
export interface CreateActivityRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateActivityRequest
     */
    type: CreateActivityRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateActivityRequest
     */
    entityType: CreateActivityRequestEntityTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateActivityRequest
     */
    entityId: string;
    /**
     * 
     * @type {any}
     * @memberof CreateActivityRequest
     */
    previousValue?: any | null;
    /**
     * 
     * @type {any}
     * @memberof CreateActivityRequest
     */
    newValue?: any | null;
    /**
     * 
     * @type {any}
     * @memberof CreateActivityRequest
     */
    metadata?: any | null;
}

/**
* @export
* @enum {string}
*/
export enum CreateActivityRequestTypeEnum {
    AttributeUpdate = 'AttributeUpdate',
    ConversationCreated = 'ConversationCreated',
    ConversationStatusChanged = 'ConversationStatusChanged',
    MessageSent = 'MessageSent',
    EmailSent = 'EmailSent',
    EmailReceived = 'EmailReceived',
    ApplicationStatusUpdate = 'ApplicationStatusUpdate',
    ReviewRecommended = 'ReviewRecommended',
    ReviewRejected = 'ReviewRejected'
}
/**
* @export
* @enum {string}
*/
export enum CreateActivityRequestEntityTypeEnum {
    Role = 'Role',
    Opening = 'Opening',
    Application = 'Application',
    Candidate = 'Candidate',
    Custom = 'Custom'
}


/**
 * Check if a given object implements the CreateActivityRequest interface.
 */
export function instanceOfCreateActivityRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "entityId" in value;

    return isInstance;
}

export function CreateActivityRequestFromJSON(json: any): CreateActivityRequest {
    return CreateActivityRequestFromJSONTyped(json, false);
}

export function CreateActivityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateActivityRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'entityType': json['entityType'],
        'entityId': json['entityId'],
        'previousValue': !exists(json, 'previousValue') ? undefined : json['previousValue'],
        'newValue': !exists(json, 'newValue') ? undefined : json['newValue'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function CreateActivityRequestToJSON(value?: CreateActivityRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'entityType': value.entityType,
        'entityId': value.entityId,
        'previousValue': value.previousValue,
        'newValue': value.newValue,
        'metadata': value.metadata,
    };
}

