/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateReview200Response
 */
export interface UpdateReview200Response {
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof UpdateReview200Response
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UpdateReview200Response
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    workspaceId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    authorId: string;
    /**
     * 
     * @type {any}
     * @memberof UpdateReview200Response
     */
    responses: any | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    status?: UpdateReview200ResponseStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    source: UpdateReview200ResponseSourceEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateReview200Response
     */
    sourceId: string;
    /**
     * 
     * @type {any}
     * @memberof UpdateReview200Response
     */
    formId?: any | null;
}

/**
* @export
* @enum {string}
*/
export enum UpdateReview200ResponseStatusEnum {
    Pending = 'Pending',
    Approved = 'Approved',
    Rejected = 'Rejected'
}
/**
* @export
* @enum {string}
*/
export enum UpdateReview200ResponseSourceEnum {
    Profile = 'Profile',
    Candidate = 'Candidate'
}


/**
 * Check if a given object implements the UpdateReview200Response interface.
 */
export function instanceOfUpdateReview200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "workspaceId" in value;
    isInstance = isInstance && "applicationId" in value;
    isInstance = isInstance && "authorId" in value;
    isInstance = isInstance && "responses" in value;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "sourceId" in value;

    return isInstance;
}

export function UpdateReview200ResponseFromJSON(json: any): UpdateReview200Response {
    return UpdateReview200ResponseFromJSONTyped(json, false);
}

export function UpdateReview200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateReview200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'updatedAt': (new Date(json['updatedAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'workspaceId': json['workspaceId'],
        'applicationId': json['applicationId'],
        'authorId': json['authorId'],
        'responses': json['responses'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'source': json['source'],
        'sourceId': json['sourceId'],
        'formId': !exists(json, 'formId') ? undefined : json['formId'],
    };
}

export function UpdateReview200ResponseToJSON(value?: UpdateReview200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updatedAt': (value.updatedAt.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'workspaceId': value.workspaceId,
        'applicationId': value.applicationId,
        'authorId': value.authorId,
        'responses': value.responses,
        'description': value.description,
        'status': value.status,
        'source': value.source,
        'sourceId': value.sourceId,
        'formId': value.formId,
    };
}

