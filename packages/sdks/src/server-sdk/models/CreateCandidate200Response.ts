/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface CreateCandidate200Response
 */
export interface CreateCandidate200Response {
  [key: string]: any | any
  /**
   *
   * @type {string}
   * @memberof CreateCandidate200Response
   */
  id: string
  /**
   *
   * @type {Date}
   * @memberof CreateCandidate200Response
   */
  updatedAt: Date
  /**
   *
   * @type {Date}
   * @memberof CreateCandidate200Response
   */
  createdAt?: Date
  /**
   *
   * @type {string}
   * @memberof CreateCandidate200Response
   */
  firstName: string
  /**
   *
   * @type {string}
   * @memberof CreateCandidate200Response
   */
  lastName: string
  /**
   *
   * @type {string}
   * @memberof CreateCandidate200Response
   */
  email: string
  /**
   *
   * @type {string}
   * @memberof CreateCandidate200Response
   */
  workspaceId: string
  /**
   *
   * @type {any}
   * @memberof CreateCandidate200Response
   */
  creatorId?: any | null
  /**
   *
   * @type {number}
   * @memberof CreateCandidate200Response
   */
  numberInWorkspace: number
  /**
   *
   * @type {any}
   * @memberof CreateCandidate200Response
   */
  deletedAt?: any | null
}

/**
 * Check if a given object implements the CreateCandidate200Response interface.
 */
export function instanceOfCreateCandidate200Response(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && "id" in value
  isInstance = isInstance && "updatedAt" in value
  isInstance = isInstance && "firstName" in value
  isInstance = isInstance && "lastName" in value
  isInstance = isInstance && "email" in value
  isInstance = isInstance && "workspaceId" in value
  isInstance = isInstance && "numberInWorkspace" in value

  return isInstance
}

export function CreateCandidate200ResponseFromJSON(
  json: any,
): CreateCandidate200Response {
  return CreateCandidate200ResponseFromJSONTyped(json, false)
}

export function CreateCandidate200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateCandidate200Response {
  if (json === undefined || json === null) {
    return json
  }
  return {
    ...json,
    id: json["id"],
    updatedAt: new Date(json["updatedAt"]),
    createdAt: !exists(json, "createdAt")
      ? undefined
      : new Date(json["createdAt"]),
    firstName: json["firstName"],
    lastName: json["lastName"],
    email: json["email"],
    workspaceId: json["workspaceId"],
    creatorId: !exists(json, "creatorId") ? undefined : json["creatorId"],
    numberInWorkspace: json["numberInWorkspace"],
    deletedAt: !exists(json, "deletedAt") ? undefined : json["deletedAt"],
  }
}

export function CreateCandidate200ResponseToJSON(
  value?: CreateCandidate200Response | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    ...value,
    id: value.id,
    updatedAt: value.updatedAt.toISOString(),
    createdAt:
      value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    firstName: value.firstName,
    lastName: value.lastName,
    email: value.email,
    workspaceId: value.workspaceId,
    creatorId: value.creatorId,
    numberInWorkspace: value.numberInWorkspace,
    deletedAt: value.deletedAt,
  }
}
