/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface WorkspaceMeetingIdPatchRequest
 */
export interface WorkspaceMeetingIdPatchRequest {
  /**
   *
   * @type {string}
   * @memberof WorkspaceMeetingIdPatchRequest
   */
  status: WorkspaceMeetingIdPatchRequestStatusEnum
  /**
   *
   * @type {string}
   * @memberof WorkspaceMeetingIdPatchRequest
   */
  notes?: string
  /**
   *
   * @type {number}
   * @memberof WorkspaceMeetingIdPatchRequest
   */
  feedbackScore?: number | null
}

/**
 * @export
 * @enum {string}
 */
export enum WorkspaceMeetingIdPatchRequestStatusEnum {
  Scheduled = "Scheduled",
  Completed = "Completed",
  Cancelled = "Cancelled",
}

/**
 * Check if a given object implements the WorkspaceMeetingIdPatchRequest interface.
 */
export function instanceOfWorkspaceMeetingIdPatchRequest(
  value: object,
): boolean {
  let isInstance = true
  isInstance = isInstance && "status" in value

  return isInstance
}

export function WorkspaceMeetingIdPatchRequestFromJSON(
  json: any,
): WorkspaceMeetingIdPatchRequest {
  return WorkspaceMeetingIdPatchRequestFromJSONTyped(json, false)
}

export function WorkspaceMeetingIdPatchRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WorkspaceMeetingIdPatchRequest {
  if (json === undefined || json === null) {
    return json
  }
  return {
    status: json["status"],
    notes: !exists(json, "notes") ? undefined : json["notes"],
    feedbackScore: !exists(json, "feedbackScore")
      ? undefined
      : json["feedbackScore"],
  }
}

export function WorkspaceMeetingIdPatchRequestToJSON(
  value?: WorkspaceMeetingIdPatchRequest | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    status: value.status,
    notes: value.notes,
    feedbackScore: value.feedbackScore,
  }
}
