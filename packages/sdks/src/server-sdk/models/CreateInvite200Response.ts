/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface CreateInvite200Response
 */
export interface CreateInvite200Response {
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  id?: string
  /**
   *
   * @type {Date}
   * @memberof CreateInvite200Response
   */
  updatedAt: Date
  /**
   *
   * @type {Date}
   * @memberof CreateInvite200Response
   */
  createdAt?: Date
  /**
   *
   * @type {boolean}
   * @memberof CreateInvite200Response
   */
  notifySender?: boolean
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  inviteeFirstName: string
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  inviteeLastName: string
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  inviteeEmail: string
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  inviteePermissionId: string
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  workspaceId: string
  /**
   *
   * @type {string}
   * @memberof CreateInvite200Response
   */
  senderProfileId: string
}

/**
 * Check if a given object implements the CreateInvite200Response interface.
 */
export function instanceOfCreateInvite200Response(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && "updatedAt" in value
  isInstance = isInstance && "inviteeFirstName" in value
  isInstance = isInstance && "inviteeLastName" in value
  isInstance = isInstance && "inviteeEmail" in value
  isInstance = isInstance && "inviteePermissionId" in value
  isInstance = isInstance && "workspaceId" in value
  isInstance = isInstance && "senderProfileId" in value

  return isInstance
}

export function CreateInvite200ResponseFromJSON(
  json: any,
): CreateInvite200Response {
  return CreateInvite200ResponseFromJSONTyped(json, false)
}

export function CreateInvite200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateInvite200Response {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    updatedAt: new Date(json["updatedAt"]),
    createdAt: !exists(json, "createdAt")
      ? undefined
      : new Date(json["createdAt"]),
    notifySender: !exists(json, "notifySender")
      ? undefined
      : json["notifySender"],
    inviteeFirstName: json["inviteeFirstName"],
    inviteeLastName: json["inviteeLastName"],
    inviteeEmail: json["inviteeEmail"],
    inviteePermissionId: json["inviteePermissionId"],
    workspaceId: json["workspaceId"],
    senderProfileId: json["senderProfileId"],
  }
}

export function CreateInvite200ResponseToJSON(
  value?: CreateInvite200Response | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    updatedAt: value.updatedAt.toISOString(),
    createdAt:
      value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    notifySender: value.notifySender,
    inviteeFirstName: value.inviteeFirstName,
    inviteeLastName: value.inviteeLastName,
    inviteeEmail: value.inviteeEmail,
    inviteePermissionId: value.inviteePermissionId,
    workspaceId: value.workspaceId,
    senderProfileId: value.senderProfileId,
  }
}
