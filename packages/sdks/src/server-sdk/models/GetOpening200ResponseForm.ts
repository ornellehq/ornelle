/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetOpening200ResponseForm
 */
export interface GetOpening200ResponseForm {
    /**
     * 
     * @type {string}
     * @memberof GetOpening200ResponseForm
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof GetOpening200ResponseForm
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetOpening200ResponseForm
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetOpening200ResponseForm
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GetOpening200ResponseForm
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof GetOpening200ResponseForm
     */
    workspaceId: string;
    /**
     * 
     * @type {string}
     * @memberof GetOpening200ResponseForm
     */
    authorId: string;
    /**
     * 
     * @type {string}
     * @memberof GetOpening200ResponseForm
     */
    type?: GetOpening200ResponseFormTypeEnum;
    /**
     * 
     * @type {any}
     * @memberof GetOpening200ResponseForm
     */
    content?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GetOpening200ResponseForm
     */
    deletedAt?: any | null;
}

/**
* @export
* @enum {string}
*/
export enum GetOpening200ResponseFormTypeEnum {
    Application = 'Application',
    Review = 'Review'
}


/**
 * Check if a given object implements the GetOpening200ResponseForm interface.
 */
export function instanceOfGetOpening200ResponseForm(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "workspaceId" in value;
    isInstance = isInstance && "authorId" in value;

    return isInstance;
}

export function GetOpening200ResponseFormFromJSON(json: any): GetOpening200ResponseForm {
    return GetOpening200ResponseFormFromJSONTyped(json, false);
}

export function GetOpening200ResponseFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOpening200ResponseForm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'updatedAt': (new Date(json['updatedAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'name': json['name'],
        'description': json['description'],
        'workspaceId': json['workspaceId'],
        'authorId': json['authorId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'deletedAt': !exists(json, 'deletedAt') ? undefined : json['deletedAt'],
    };
}

export function GetOpening200ResponseFormToJSON(value?: GetOpening200ResponseForm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updatedAt': (value.updatedAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'name': value.name,
        'description': value.description,
        'workspaceId': value.workspaceId,
        'authorId': value.authorId,
        'type': value.type,
        'content': value.content,
        'deletedAt': value.deletedAt,
    };
}

