/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface BookAMeetingRequest
 */
export interface BookAMeetingRequest {
  /**
   *
   * @type {Date}
   * @memberof BookAMeetingRequest
   */
  startTime: Date
  /**
   *
   * @type {Date}
   * @memberof BookAMeetingRequest
   */
  endTime: Date
  /**
   *
   * @type {string}
   * @memberof BookAMeetingRequest
   */
  timezone?: string
  /**
   *
   * @type {string}
   * @memberof BookAMeetingRequest
   */
  note?: string
}

/**
 * Check if a given object implements the BookAMeetingRequest interface.
 */
export function instanceOfBookAMeetingRequest(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && "startTime" in value
  isInstance = isInstance && "endTime" in value

  return isInstance
}

export function BookAMeetingRequestFromJSON(json: any): BookAMeetingRequest {
  return BookAMeetingRequestFromJSONTyped(json, false)
}

export function BookAMeetingRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BookAMeetingRequest {
  if (json === undefined || json === null) {
    return json
  }
  return {
    startTime: new Date(json["startTime"]),
    endTime: new Date(json["endTime"]),
    timezone: !exists(json, "timezone") ? undefined : json["timezone"],
    note: !exists(json, "note") ? undefined : json["note"],
  }
}

export function BookAMeetingRequestToJSON(
  value?: BookAMeetingRequest | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    startTime: value.startTime.toISOString(),
    endTime: value.endTime.toISOString(),
    timezone: value.timezone,
    note: value.note,
  }
}
