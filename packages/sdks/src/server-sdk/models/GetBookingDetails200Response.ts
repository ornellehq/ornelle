/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface GetBookingDetails200Response
 */
export interface GetBookingDetails200Response {
  [key: string]: any | any
  /**
   *
   * @type {string}
   * @memberof GetBookingDetails200Response
   */
  timezone: string
  /**
   *
   * @type {string}
   * @memberof GetBookingDetails200Response
   */
  firstName: string
  /**
   *
   * @type {string}
   * @memberof GetBookingDetails200Response
   */
  lastName: string
  /**
   *
   * @type {Array<number>}
   * @memberof GetBookingDetails200Response
   */
  workingDays: Array<number>
  /**
   *
   * @type {number}
   * @memberof GetBookingDetails200Response
   */
  workingHoursStart: number
  /**
   *
   * @type {number}
   * @memberof GetBookingDetails200Response
   */
  workingHoursEnd: number
  /**
   *
   * @type {any}
   * @memberof GetBookingDetails200Response
   */
  unavailabilityRules: any | null
  /**
   *
   * @type {number}
   * @memberof GetBookingDetails200Response
   */
  duration: number
  /**
   *
   * @type {string}
   * @memberof GetBookingDetails200Response
   */
  description: string
  /**
   *
   * @type {Date}
   * @memberof GetBookingDetails200Response
   */
  scheduledAt?: Date
}

/**
 * Check if a given object implements the GetBookingDetails200Response interface.
 */
export function instanceOfGetBookingDetails200Response(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && "timezone" in value
  isInstance = isInstance && "firstName" in value
  isInstance = isInstance && "lastName" in value
  isInstance = isInstance && "workingDays" in value
  isInstance = isInstance && "workingHoursStart" in value
  isInstance = isInstance && "workingHoursEnd" in value
  isInstance = isInstance && "unavailabilityRules" in value
  isInstance = isInstance && "duration" in value
  isInstance = isInstance && "description" in value

  return isInstance
}

export function GetBookingDetails200ResponseFromJSON(
  json: any,
): GetBookingDetails200Response {
  return GetBookingDetails200ResponseFromJSONTyped(json, false)
}

export function GetBookingDetails200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetBookingDetails200Response {
  if (json === undefined || json === null) {
    return json
  }
  return {
    ...json,
    timezone: json["timezone"],
    firstName: json["firstName"],
    lastName: json["lastName"],
    workingDays: json["workingDays"],
    workingHoursStart: json["workingHoursStart"],
    workingHoursEnd: json["workingHoursEnd"],
    unavailabilityRules: json["unavailabilityRules"],
    duration: json["duration"],
    description: json["description"],
    scheduledAt: !exists(json, "scheduledAt")
      ? undefined
      : new Date(json["scheduledAt"]),
  }
}

export function GetBookingDetails200ResponseToJSON(
  value?: GetBookingDetails200Response | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    ...value,
    timezone: value.timezone,
    firstName: value.firstName,
    lastName: value.lastName,
    workingDays: value.workingDays,
    workingHoursStart: value.workingHoursStart,
    workingHoursEnd: value.workingHoursEnd,
    unavailabilityRules: value.unavailabilityRules,
    duration: value.duration,
    description: value.description,
    scheduledAt:
      value.scheduledAt === undefined
        ? undefined
        : value.scheduledAt.toISOString(),
  }
}
