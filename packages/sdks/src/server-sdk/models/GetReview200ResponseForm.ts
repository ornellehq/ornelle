/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface GetReview200ResponseForm
 */
export interface GetReview200ResponseForm {
  /**
   *
   * @type {string}
   * @memberof GetReview200ResponseForm
   */
  id?: string
  /**
   *
   * @type {Date}
   * @memberof GetReview200ResponseForm
   */
  updatedAt: Date
  /**
   *
   * @type {Date}
   * @memberof GetReview200ResponseForm
   */
  createdAt?: Date
  /**
   *
   * @type {string}
   * @memberof GetReview200ResponseForm
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof GetReview200ResponseForm
   */
  description: string
  /**
   *
   * @type {string}
   * @memberof GetReview200ResponseForm
   */
  workspaceId: string
  /**
   *
   * @type {string}
   * @memberof GetReview200ResponseForm
   */
  authorId: string
  /**
   *
   * @type {string}
   * @memberof GetReview200ResponseForm
   */
  type?: GetReview200ResponseFormTypeEnum
  /**
   *
   * @type {any}
   * @memberof GetReview200ResponseForm
   */
  content?: any | null
  /**
   *
   * @type {any}
   * @memberof GetReview200ResponseForm
   */
  deletedAt?: any | null
}

/**
 * @export
 * @enum {string}
 */
export enum GetReview200ResponseFormTypeEnum {
  Application = "Application",
  Review = "Review",
}

/**
 * Check if a given object implements the GetReview200ResponseForm interface.
 */
export function instanceOfGetReview200ResponseForm(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && "updatedAt" in value
  isInstance = isInstance && "name" in value
  isInstance = isInstance && "description" in value
  isInstance = isInstance && "workspaceId" in value
  isInstance = isInstance && "authorId" in value

  return isInstance
}

export function GetReview200ResponseFormFromJSON(
  json: any,
): GetReview200ResponseForm {
  return GetReview200ResponseFormFromJSONTyped(json, false)
}

export function GetReview200ResponseFormFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetReview200ResponseForm {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    updatedAt: new Date(json["updatedAt"]),
    createdAt: !exists(json, "createdAt")
      ? undefined
      : new Date(json["createdAt"]),
    name: json["name"],
    description: json["description"],
    workspaceId: json["workspaceId"],
    authorId: json["authorId"],
    type: !exists(json, "type") ? undefined : json["type"],
    content: !exists(json, "content") ? undefined : json["content"],
    deletedAt: !exists(json, "deletedAt") ? undefined : json["deletedAt"],
  }
}

export function GetReview200ResponseFormToJSON(
  value?: GetReview200ResponseForm | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    updatedAt: value.updatedAt.toISOString(),
    createdAt:
      value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    name: value.name,
    description: value.description,
    workspaceId: value.workspaceId,
    authorId: value.authorId,
    type: value.type,
    content: value.content,
    deletedAt: value.deletedAt,
  }
}
