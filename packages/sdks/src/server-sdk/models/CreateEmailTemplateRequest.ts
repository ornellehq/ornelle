/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetApplications200ResponseInnerNotes } from './GetApplications200ResponseInnerNotes';
import {
    GetApplications200ResponseInnerNotesFromJSON,
    GetApplications200ResponseInnerNotesFromJSONTyped,
    GetApplications200ResponseInnerNotesToJSON,
} from './GetApplications200ResponseInnerNotes';

/**
 * 
 * @export
 * @interface CreateEmailTemplateRequest
 */
export interface CreateEmailTemplateRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateEmailTemplateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateEmailTemplateRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateEmailTemplateRequest
     */
    subject: string;
    /**
     * 
     * @type {GetApplications200ResponseInnerNotes}
     * @memberof CreateEmailTemplateRequest
     */
    content?: GetApplications200ResponseInnerNotes;
    /**
     * 
     * @type {string}
     * @memberof CreateEmailTemplateRequest
     */
    emailType: CreateEmailTemplateRequestEmailTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum CreateEmailTemplateRequestEmailTypeEnum {
    Application = 'Application'
}


/**
 * Check if a given object implements the CreateEmailTemplateRequest interface.
 */
export function instanceOfCreateEmailTemplateRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "subject" in value;
    isInstance = isInstance && "emailType" in value;

    return isInstance;
}

export function CreateEmailTemplateRequestFromJSON(json: any): CreateEmailTemplateRequest {
    return CreateEmailTemplateRequestFromJSONTyped(json, false);
}

export function CreateEmailTemplateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEmailTemplateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'subject': json['subject'],
        'content': !exists(json, 'content') ? undefined : GetApplications200ResponseInnerNotesFromJSON(json['content']),
        'emailType': json['emailType'],
    };
}

export function CreateEmailTemplateRequestToJSON(value?: CreateEmailTemplateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'subject': value.subject,
        'content': GetApplications200ResponseInnerNotesToJSON(value.content),
        'emailType': value.emailType,
    };
}

