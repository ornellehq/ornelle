/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
import type { GetIntegrations200ResponseInnerProfile } from "./GetIntegrations200ResponseInnerProfile"
import {
  GetIntegrations200ResponseInnerProfileFromJSON,
  GetIntegrations200ResponseInnerProfileFromJSONTyped,
  GetIntegrations200ResponseInnerProfileToJSON,
} from "./GetIntegrations200ResponseInnerProfile"

/**
 *
 * @export
 * @interface GetIntegrations200ResponseInner
 */
export interface GetIntegrations200ResponseInner {
  [key: string]: any | any
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  id: string
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  type: GetIntegrations200ResponseInnerTypeEnum
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  provider: GetIntegrations200ResponseInnerProviderEnum
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  forType: GetIntegrations200ResponseInnerForTypeEnum
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  forId?: any | null
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  accessToken?: string
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  refreshToken?: any | null
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  expiresAt?: any | null
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  accountId?: any | null
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  accountEmail?: any | null
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  calendarId?: any | null
  /**
   *
   * @type {boolean}
   * @memberof GetIntegrations200ResponseInner
   */
  syncEnabled?: boolean
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  lastSyncedAt?: any | null
  /**
   *
   * @type {any}
   * @memberof GetIntegrations200ResponseInner
   */
  metadata?: any | null
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  workspaceId: string
  /**
   *
   * @type {string}
   * @memberof GetIntegrations200ResponseInner
   */
  profileId: string
  /**
   *
   * @type {Date}
   * @memberof GetIntegrations200ResponseInner
   */
  createdAt: Date
  /**
   *
   * @type {Date}
   * @memberof GetIntegrations200ResponseInner
   */
  updatedAt: Date
  /**
   *
   * @type {GetIntegrations200ResponseInnerProfile}
   * @memberof GetIntegrations200ResponseInner
   */
  profile?: GetIntegrations200ResponseInnerProfile
}

/**
 * @export
 * @enum {string}
 */
export enum GetIntegrations200ResponseInnerTypeEnum {
  Calendar = "CALENDAR",
  VideoConferencing = "VIDEO_CONFERENCING",
}
/**
 * @export
 * @enum {string}
 */
export enum GetIntegrations200ResponseInnerProviderEnum {
  Google = "GOOGLE",
  Microsoft = "MICROSOFT",
  Zoom = "ZOOM",
}
/**
 * @export
 * @enum {string}
 */
export enum GetIntegrations200ResponseInnerForTypeEnum {
  Profile = "PROFILE",
  Workspace = "WORKSPACE",
}

/**
 * Check if a given object implements the GetIntegrations200ResponseInner interface.
 */
export function instanceOfGetIntegrations200ResponseInner(
  value: object,
): boolean {
  let isInstance = true
  isInstance = isInstance && "id" in value
  isInstance = isInstance && "type" in value
  isInstance = isInstance && "provider" in value
  isInstance = isInstance && "forType" in value
  isInstance = isInstance && "workspaceId" in value
  isInstance = isInstance && "profileId" in value
  isInstance = isInstance && "createdAt" in value
  isInstance = isInstance && "updatedAt" in value

  return isInstance
}

export function GetIntegrations200ResponseInnerFromJSON(
  json: any,
): GetIntegrations200ResponseInner {
  return GetIntegrations200ResponseInnerFromJSONTyped(json, false)
}

export function GetIntegrations200ResponseInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetIntegrations200ResponseInner {
  if (json === undefined || json === null) {
    return json
  }
  return {
    ...json,
    id: json["id"],
    type: json["type"],
    provider: json["provider"],
    forType: json["forType"],
    forId: !exists(json, "forId") ? undefined : json["forId"],
    accessToken: !exists(json, "accessToken") ? undefined : json["accessToken"],
    refreshToken: !exists(json, "refreshToken")
      ? undefined
      : json["refreshToken"],
    expiresAt: !exists(json, "expiresAt") ? undefined : json["expiresAt"],
    accountId: !exists(json, "accountId") ? undefined : json["accountId"],
    accountEmail: !exists(json, "accountEmail")
      ? undefined
      : json["accountEmail"],
    calendarId: !exists(json, "calendarId") ? undefined : json["calendarId"],
    syncEnabled: !exists(json, "syncEnabled") ? undefined : json["syncEnabled"],
    lastSyncedAt: !exists(json, "lastSyncedAt")
      ? undefined
      : json["lastSyncedAt"],
    metadata: !exists(json, "metadata") ? undefined : json["metadata"],
    workspaceId: json["workspaceId"],
    profileId: json["profileId"],
    createdAt: new Date(json["createdAt"]),
    updatedAt: new Date(json["updatedAt"]),
    profile: !exists(json, "profile")
      ? undefined
      : GetIntegrations200ResponseInnerProfileFromJSON(json["profile"]),
  }
}

export function GetIntegrations200ResponseInnerToJSON(
  value?: GetIntegrations200ResponseInner | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    ...value,
    id: value.id,
    type: value.type,
    provider: value.provider,
    forType: value.forType,
    forId: value.forId,
    accessToken: value.accessToken,
    refreshToken: value.refreshToken,
    expiresAt: value.expiresAt,
    accountId: value.accountId,
    accountEmail: value.accountEmail,
    calendarId: value.calendarId,
    syncEnabled: value.syncEnabled,
    lastSyncedAt: value.lastSyncedAt,
    metadata: value.metadata,
    workspaceId: value.workspaceId,
    profileId: value.profileId,
    createdAt: value.createdAt.toISOString(),
    updatedAt: value.updatedAt.toISOString(),
    profile: GetIntegrations200ResponseInnerProfileToJSON(value.profile),
  }
}
