/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateMessageRequest
 */
export interface CreateMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateMessageRequest
     */
    type: CreateMessageRequestTypeEnum;
    /**
     * Required for email messages
     * @type {string}
     * @memberof CreateMessageRequest
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMessageRequest
     */
    content: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateMessageRequest
     */
    ccEmails?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateMessageRequest
     */
    bccEmails?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateMessageRequest
     */
    toEmails?: Array<string>;
    /**
     * Optional conversation ID to associate the message with
     * @type {string}
     * @memberof CreateMessageRequest
     */
    conversationId?: string;
    /**
     * Optional application ID to associate the message with
     * @type {string}
     * @memberof CreateMessageRequest
     */
    applicationId?: string;
    /**
     * Parent message ID for replies
     * @type {string}
     * @memberof CreateMessageRequest
     */
    parentId?: string;
}

/**
* @export
* @enum {string}
*/
export enum CreateMessageRequestTypeEnum {
    EmailOutbound = 'EMAIL_OUTBOUND',
    EmailInbound = 'EMAIL_INBOUND',
    InternalMessage = 'INTERNAL_MESSAGE',
    InternalResponse = 'INTERNAL_RESPONSE',
    Platform = 'PLATFORM'
}


/**
 * Check if a given object implements the CreateMessageRequest interface.
 */
export function instanceOfCreateMessageRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "content" in value;

    return isInstance;
}

export function CreateMessageRequestFromJSON(json: any): CreateMessageRequest {
    return CreateMessageRequestFromJSONTyped(json, false);
}

export function CreateMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMessageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'content': json['content'],
        'ccEmails': !exists(json, 'ccEmails') ? undefined : json['ccEmails'],
        'bccEmails': !exists(json, 'bccEmails') ? undefined : json['bccEmails'],
        'toEmails': !exists(json, 'toEmails') ? undefined : json['toEmails'],
        'conversationId': !exists(json, 'conversationId') ? undefined : json['conversationId'],
        'applicationId': !exists(json, 'applicationId') ? undefined : json['applicationId'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
    };
}

export function CreateMessageRequestToJSON(value?: CreateMessageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'subject': value.subject,
        'content': value.content,
        'ccEmails': value.ccEmails,
        'bccEmails': value.bccEmails,
        'toEmails': value.toEmails,
        'conversationId': value.conversationId,
        'applicationId': value.applicationId,
        'parentId': value.parentId,
    };
}

