/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateAttributeRequestConfigurationAnyOf
 */
export interface CreateAttributeRequestConfigurationAnyOf {
    /**
     * 
     * @type {string}
     * @memberof CreateAttributeRequestConfigurationAnyOf
     */
    type?: CreateAttributeRequestConfigurationAnyOfTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateAttributeRequestConfigurationAnyOf
     */
    textType?: CreateAttributeRequestConfigurationAnyOfTextTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum CreateAttributeRequestConfigurationAnyOfTypeEnum {
    Text = 'Text'
}
/**
* @export
* @enum {string}
*/
export enum CreateAttributeRequestConfigurationAnyOfTextTypeEnum {
    SingleLine = 'single-line',
    MultiLine = 'multi-line',
    RichText = 'rich-text'
}


/**
 * Check if a given object implements the CreateAttributeRequestConfigurationAnyOf interface.
 */
export function instanceOfCreateAttributeRequestConfigurationAnyOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateAttributeRequestConfigurationAnyOfFromJSON(json: any): CreateAttributeRequestConfigurationAnyOf {
    return CreateAttributeRequestConfigurationAnyOfFromJSONTyped(json, false);
}

export function CreateAttributeRequestConfigurationAnyOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAttributeRequestConfigurationAnyOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'textType': !exists(json, 'textType') ? undefined : json['textType'],
    };
}

export function CreateAttributeRequestConfigurationAnyOfToJSON(value?: CreateAttributeRequestConfigurationAnyOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'textType': value.textType,
    };
}

