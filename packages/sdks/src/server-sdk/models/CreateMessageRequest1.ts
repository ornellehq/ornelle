/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateMessageRequest1
 */
export interface CreateMessageRequest1 {
    /**
     * 
     * @type {string}
     * @memberof CreateMessageRequest1
     */
    type: CreateMessageRequest1TypeEnum;
    /**
     * Required for email messages
     * @type {string}
     * @memberof CreateMessageRequest1
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMessageRequest1
     */
    content: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateMessageRequest1
     */
    ccEmails?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateMessageRequest1
     */
    bccEmails?: Array<string>;
}

/**
* @export
* @enum {string}
*/
export enum CreateMessageRequest1TypeEnum {
    EmailOutbound = 'EMAIL_OUTBOUND',
    EmailInbound = 'EMAIL_INBOUND',
    InternalMessage = 'INTERNAL_MESSAGE',
    InternalResponse = 'INTERNAL_RESPONSE',
    Platform = 'PLATFORM'
}


/**
 * Check if a given object implements the CreateMessageRequest1 interface.
 */
export function instanceOfCreateMessageRequest1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "content" in value;

    return isInstance;
}

export function CreateMessageRequest1FromJSON(json: any): CreateMessageRequest1 {
    return CreateMessageRequest1FromJSONTyped(json, false);
}

export function CreateMessageRequest1FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMessageRequest1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'content': json['content'],
        'ccEmails': !exists(json, 'ccEmails') ? undefined : json['ccEmails'],
        'bccEmails': !exists(json, 'bccEmails') ? undefined : json['bccEmails'],
    };
}

export function CreateMessageRequest1ToJSON(value?: CreateMessageRequest1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'subject': value.subject,
        'content': value.content,
        'ccEmails': value.ccEmails,
        'bccEmails': value.bccEmails,
    };
}

