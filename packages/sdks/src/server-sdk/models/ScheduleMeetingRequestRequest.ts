/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
/**
 *
 * @export
 * @interface ScheduleMeetingRequestRequest
 */
export interface ScheduleMeetingRequestRequest {
  /**
   * ID of the application to schedule a meeting for
   * @type {string}
   * @memberof ScheduleMeetingRequestRequest
   */
  applicationId: string
  /**
   * Duration of the meeting in minutes
   * @type {number}
   * @memberof ScheduleMeetingRequestRequest
   */
  duration: number
  /**
   * Description of the meeting or additional details
   * @type {string}
   * @memberof ScheduleMeetingRequestRequest
   */
  description?: string | null
  /**
   * Custom email subject line
   * @type {string}
   * @memberof ScheduleMeetingRequestRequest
   */
  subject?: string | null
  /**
   * Custom email body content (HTML)
   * @type {string}
   * @memberof ScheduleMeetingRequestRequest
   */
  emailBody?: string | null
  /**
   * ID of an email template to use
   * @type {string}
   * @memberof ScheduleMeetingRequestRequest
   */
  emailTemplateId?: string | null
  /**
   * ID of a video conference integration to use to generate a meeting link
   * @type {string}
   * @memberof ScheduleMeetingRequestRequest
   */
  integrationId?: string | null
}

/**
 * Check if a given object implements the ScheduleMeetingRequestRequest interface.
 */
export function instanceOfScheduleMeetingRequestRequest(
  value: object,
): boolean {
  let isInstance = true
  isInstance = isInstance && "applicationId" in value
  isInstance = isInstance && "duration" in value

  return isInstance
}

export function ScheduleMeetingRequestRequestFromJSON(
  json: any,
): ScheduleMeetingRequestRequest {
  return ScheduleMeetingRequestRequestFromJSONTyped(json, false)
}

export function ScheduleMeetingRequestRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ScheduleMeetingRequestRequest {
  if (json === undefined || json === null) {
    return json
  }
  return {
    applicationId: json["applicationId"],
    duration: json["duration"],
    description: !exists(json, "description") ? undefined : json["description"],
    subject: !exists(json, "subject") ? undefined : json["subject"],
    emailBody: !exists(json, "emailBody") ? undefined : json["emailBody"],
    emailTemplateId: !exists(json, "emailTemplateId")
      ? undefined
      : json["emailTemplateId"],
    integrationId: !exists(json, "integrationId")
      ? undefined
      : json["integrationId"],
  }
}

export function ScheduleMeetingRequestRequestToJSON(
  value?: ScheduleMeetingRequestRequest | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    applicationId: value.applicationId,
    duration: value.duration,
    description: value.description,
    subject: value.subject,
    emailBody: value.emailBody,
    emailTemplateId: value.emailTemplateId,
    integrationId: value.integrationId,
  }
}
