/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
  WorkspaceMeetingTemplateGet200Response,
  WorkspaceMeetingTemplateGet201Response,
  WorkspaceMeetingTemplateGetRequest,
  WorkspaceMeetingTemplateIdDelete200Response,
  WorkspaceMeetingTemplateIdDelete200Response1,
} from "../models"
import {
  WorkspaceMeetingTemplateGet200ResponseFromJSON,
  WorkspaceMeetingTemplateGet200ResponseToJSON,
  WorkspaceMeetingTemplateGet201ResponseFromJSON,
  WorkspaceMeetingTemplateGet201ResponseToJSON,
  WorkspaceMeetingTemplateGetRequestFromJSON,
  WorkspaceMeetingTemplateGetRequestToJSON,
  WorkspaceMeetingTemplateIdDelete200Response1FromJSON,
  WorkspaceMeetingTemplateIdDelete200Response1ToJSON,
  WorkspaceMeetingTemplateIdDelete200ResponseFromJSON,
  WorkspaceMeetingTemplateIdDelete200ResponseToJSON,
} from "../models"
import * as runtime from "../runtime"

export interface WorkspaceMeetingTemplateGetRequest {
  page?: number
  size?: number
}

export interface WorkspaceMeetingTemplateIdDeleteRequest {
  id: string
}

export interface WorkspaceMeetingTemplateIdGetRequest {
  id: string
}

export interface WorkspaceMeetingTemplateIdPatchRequest {
  id: string
  workspaceMeetingTemplateGetRequest: WorkspaceMeetingTemplateGetRequest
}

export interface WorkspaceMeetingTemplatePostRequest {
  workspaceMeetingTemplateGetRequest: WorkspaceMeetingTemplateGetRequest
}

/**
 * MeetingTemplateApi - interface
 *
 * @export
 * @interface MeetingTemplateApiInterface
 */
export interface MeetingTemplateApiInterface {
  /**
   * Get meeting note templates
   * @param {number} [page]
   * @param {number} [size]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MeetingTemplateApiInterface
   */
  workspaceMeetingTemplateGetRaw(
    requestParameters: WorkspaceMeetingTemplateGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateGet200Response>>

  /**
   * Get meeting note templates
   */
  workspaceMeetingTemplateGet(
    requestParameters: WorkspaceMeetingTemplateGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateGet200Response>

  /**
   * Delete a meeting note template
   * @param {string} id
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MeetingTemplateApiInterface
   */
  workspaceMeetingTemplateIdDeleteRaw(
    requestParameters: WorkspaceMeetingTemplateIdDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateIdDelete200Response>>

  /**
   * Delete a meeting note template
   */
  workspaceMeetingTemplateIdDelete(
    requestParameters: WorkspaceMeetingTemplateIdDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateIdDelete200Response>

  /**
   * Get a meeting note template by ID
   * @param {string} id
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MeetingTemplateApiInterface
   */
  workspaceMeetingTemplateIdGetRaw(
    requestParameters: WorkspaceMeetingTemplateIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateGet201Response>>

  /**
   * Get a meeting note template by ID
   */
  workspaceMeetingTemplateIdGet(
    requestParameters: WorkspaceMeetingTemplateIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateGet201Response>

  /**
   * Update a meeting note template
   * @param {string} id
   * @param {WorkspaceMeetingTemplateGetRequest} workspaceMeetingTemplateGetRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MeetingTemplateApiInterface
   */
  workspaceMeetingTemplateIdPatchRaw(
    requestParameters: WorkspaceMeetingTemplateIdPatchRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateIdDelete200Response1>>

  /**
   * Update a meeting note template
   */
  workspaceMeetingTemplateIdPatch(
    requestParameters: WorkspaceMeetingTemplateIdPatchRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateIdDelete200Response1>

  /**
   * Create a new meeting note template
   * @param {WorkspaceMeetingTemplateGetRequest} workspaceMeetingTemplateGetRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MeetingTemplateApiInterface
   */
  workspaceMeetingTemplatePostRaw(
    requestParameters: WorkspaceMeetingTemplatePostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateGet201Response>>

  /**
   * Create a new meeting note template
   */
  workspaceMeetingTemplatePost(
    requestParameters: WorkspaceMeetingTemplatePostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateGet201Response>
}

/**
 *
 */
export class MeetingTemplateApi
  extends runtime.BaseAPI
  implements MeetingTemplateApiInterface
{
  /**
   * Get meeting note templates
   */
  async workspaceMeetingTemplateGetRaw(
    requestParameters: WorkspaceMeetingTemplateGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateGet200Response>> {
    const queryParameters: any = {}

    if (requestParameters.page !== undefined) {
      queryParameters["page"] = requestParameters.page
    }

    if (requestParameters.size !== undefined) {
      queryParameters["size"] = requestParameters.size
    }

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/workspace/meeting-template/`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      WorkspaceMeetingTemplateGet200ResponseFromJSON(jsonValue),
    )
  }

  /**
   * Get meeting note templates
   */
  async workspaceMeetingTemplateGet(
    requestParameters: WorkspaceMeetingTemplateGetRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateGet200Response> {
    const response = await this.workspaceMeetingTemplateGetRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }

  /**
   * Delete a meeting note template
   */
  async workspaceMeetingTemplateIdDeleteRaw(
    requestParameters: WorkspaceMeetingTemplateIdDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateIdDelete200Response>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        "id",
        "Required parameter requestParameters.id was null or undefined when calling workspaceMeetingTemplateIdDelete.",
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/workspace/meeting-template/{id}`.replace(
          `{${"id"}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: "DELETE",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      WorkspaceMeetingTemplateIdDelete200ResponseFromJSON(jsonValue),
    )
  }

  /**
   * Delete a meeting note template
   */
  async workspaceMeetingTemplateIdDelete(
    requestParameters: WorkspaceMeetingTemplateIdDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateIdDelete200Response> {
    const response = await this.workspaceMeetingTemplateIdDeleteRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }

  /**
   * Get a meeting note template by ID
   */
  async workspaceMeetingTemplateIdGetRaw(
    requestParameters: WorkspaceMeetingTemplateIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateGet201Response>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        "id",
        "Required parameter requestParameters.id was null or undefined when calling workspaceMeetingTemplateIdGet.",
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/workspace/meeting-template/{id}`.replace(
          `{${"id"}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      WorkspaceMeetingTemplateGet201ResponseFromJSON(jsonValue),
    )
  }

  /**
   * Get a meeting note template by ID
   */
  async workspaceMeetingTemplateIdGet(
    requestParameters: WorkspaceMeetingTemplateIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateGet201Response> {
    const response = await this.workspaceMeetingTemplateIdGetRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }

  /**
   * Update a meeting note template
   */
  async workspaceMeetingTemplateIdPatchRaw(
    requestParameters: WorkspaceMeetingTemplateIdPatchRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<
    runtime.ApiResponse<WorkspaceMeetingTemplateIdDelete200Response1>
  > {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        "id",
        "Required parameter requestParameters.id was null or undefined when calling workspaceMeetingTemplateIdPatch.",
      )
    }

    if (
      requestParameters.workspaceMeetingTemplateGetRequest === null ||
      requestParameters.workspaceMeetingTemplateGetRequest === undefined
    ) {
      throw new runtime.RequiredError(
        "workspaceMeetingTemplateGetRequest",
        "Required parameter requestParameters.workspaceMeetingTemplateGetRequest was null or undefined when calling workspaceMeetingTemplateIdPatch.",
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters["Content-Type"] = "application/json"

    const response = await this.request(
      {
        path: `/workspace/meeting-template/{id}`.replace(
          `{${"id"}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: "PATCH",
        headers: headerParameters,
        query: queryParameters,
        body: WorkspaceMeetingTemplateGetRequestToJSON(
          requestParameters.workspaceMeetingTemplateGetRequest,
        ),
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      WorkspaceMeetingTemplateIdDelete200Response1FromJSON(jsonValue),
    )
  }

  /**
   * Update a meeting note template
   */
  async workspaceMeetingTemplateIdPatch(
    requestParameters: WorkspaceMeetingTemplateIdPatchRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateIdDelete200Response1> {
    const response = await this.workspaceMeetingTemplateIdPatchRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }

  /**
   * Create a new meeting note template
   */
  async workspaceMeetingTemplatePostRaw(
    requestParameters: WorkspaceMeetingTemplatePostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<WorkspaceMeetingTemplateGet201Response>> {
    if (
      requestParameters.workspaceMeetingTemplateGetRequest === null ||
      requestParameters.workspaceMeetingTemplateGetRequest === undefined
    ) {
      throw new runtime.RequiredError(
        "workspaceMeetingTemplateGetRequest",
        "Required parameter requestParameters.workspaceMeetingTemplateGetRequest was null or undefined when calling workspaceMeetingTemplatePost.",
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters["Content-Type"] = "application/json"

    const response = await this.request(
      {
        path: `/workspace/meeting-template/`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: WorkspaceMeetingTemplateGetRequestToJSON(
          requestParameters.workspaceMeetingTemplateGetRequest,
        ),
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      WorkspaceMeetingTemplateGet201ResponseFromJSON(jsonValue),
    )
  }

  /**
   * Create a new meeting note template
   */
  async workspaceMeetingTemplatePost(
    requestParameters: WorkspaceMeetingTemplatePostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<WorkspaceMeetingTemplateGet201Response> {
    const response = await this.workspaceMeetingTemplatePostRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }
}
