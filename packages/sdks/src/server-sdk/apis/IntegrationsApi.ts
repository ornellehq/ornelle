/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { GetIntegrations200ResponseInner } from "../models"
import {
  GetIntegrations200ResponseInnerFromJSON,
  GetIntegrations200ResponseInnerToJSON,
} from "../models"
import * as runtime from "../runtime"

export interface GetIntegrationsRequest {
  type?: GetIntegrationsTypeEnum
}

/**
 * IntegrationsApi - interface
 *
 * @export
 * @interface IntegrationsApiInterface
 */
export interface IntegrationsApiInterface {
  /**
   * Get workspace and profile integrations
   * @param {'CALENDAR' | 'VIDEO_CONFERENCING'} [type] Filter by integration type
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof IntegrationsApiInterface
   */
  getIntegrationsRaw(
    requestParameters: GetIntegrationsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Array<GetIntegrations200ResponseInner>>>

  /**
   * Get workspace and profile integrations
   */
  getIntegrations(
    requestParameters: GetIntegrationsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Array<GetIntegrations200ResponseInner>>
}

/**
 *
 */
export class IntegrationsApi
  extends runtime.BaseAPI
  implements IntegrationsApiInterface
{
  /**
   * Get workspace and profile integrations
   */
  async getIntegrationsRaw(
    requestParameters: GetIntegrationsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Array<GetIntegrations200ResponseInner>>> {
    const queryParameters: any = {}

    if (requestParameters.type !== undefined) {
      queryParameters["type"] = requestParameters.type
    }

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/workspace/integrations/`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(GetIntegrations200ResponseInnerFromJSON),
    )
  }

  /**
   * Get workspace and profile integrations
   */
  async getIntegrations(
    requestParameters: GetIntegrationsRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Array<GetIntegrations200ResponseInner>> {
    const response = await this.getIntegrationsRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }
}

/**
 * @export
 * @enum {string}
 */
export enum GetIntegrationsTypeEnum {
  Calendar = "CALENDAR",
  VideoConferencing = "VIDEO_CONFERENCING",
}
