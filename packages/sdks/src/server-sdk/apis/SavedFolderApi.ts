/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateSavedFolderRequest,
  GetSavedFolders200ResponseInner,
  UpdateSavedFolderRequest,
} from '../models';
import {
    CreateSavedFolderRequestFromJSON,
    CreateSavedFolderRequestToJSON,
    GetSavedFolders200ResponseInnerFromJSON,
    GetSavedFolders200ResponseInnerToJSON,
    UpdateSavedFolderRequestFromJSON,
    UpdateSavedFolderRequestToJSON,
} from '../models';

export interface CreateSavedFolderOperationRequest {
    createSavedFolderRequest: CreateSavedFolderRequest;
}

export interface DeleteSavedFolderRequest {
    id: string;
}

export interface GetSavedFoldersRequest {
    parentId?: any;
}

export interface UpdateSavedFolderOperationRequest {
    id: string;
    updateSavedFolderRequest?: UpdateSavedFolderRequest;
}

/**
 * SavedFolderApi - interface
 * 
 * @export
 * @interface SavedFolderApiInterface
 */
export interface SavedFolderApiInterface {
    /**
     * Create a new saved folder for the current workspace
     * @param {CreateSavedFolderRequest} createSavedFolderRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SavedFolderApiInterface
     */
    createSavedFolderRaw(requestParameters: CreateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSavedFolders200ResponseInner>>;

    /**
     * Create a new saved folder for the current workspace
     */
    createSavedFolder(requestParameters: CreateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSavedFolders200ResponseInner>;

    /**
     * Delete a saved folder by id
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SavedFolderApiInterface
     */
    deleteSavedFolderRaw(requestParameters: DeleteSavedFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Delete a saved folder by id
     */
    deleteSavedFolder(requestParameters: DeleteSavedFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * Get saved folders for the current workspace and user
     * @param {any} [parentId] Optional parent folder ID to filter by (use \&#39;null\&#39; string for root folders)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SavedFolderApiInterface
     */
    getSavedFoldersRaw(requestParameters: GetSavedFoldersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetSavedFolders200ResponseInner>>>;

    /**
     * Get saved folders for the current workspace and user
     */
    getSavedFolders(requestParameters: GetSavedFoldersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetSavedFolders200ResponseInner>>;

    /**
     * Update a saved folder by id
     * @param {string} id 
     * @param {UpdateSavedFolderRequest} [updateSavedFolderRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SavedFolderApiInterface
     */
    updateSavedFolderRaw(requestParameters: UpdateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSavedFolders200ResponseInner>>;

    /**
     * Update a saved folder by id
     */
    updateSavedFolder(requestParameters: UpdateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSavedFolders200ResponseInner>;

}

/**
 * 
 */
export class SavedFolderApi extends runtime.BaseAPI implements SavedFolderApiInterface {

    /**
     * Create a new saved folder for the current workspace
     */
    async createSavedFolderRaw(requestParameters: CreateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSavedFolders200ResponseInner>> {
        if (requestParameters.createSavedFolderRequest === null || requestParameters.createSavedFolderRequest === undefined) {
            throw new runtime.RequiredError('createSavedFolderRequest','Required parameter requestParameters.createSavedFolderRequest was null or undefined when calling createSavedFolder.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/workspace/saved-folders/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateSavedFolderRequestToJSON(requestParameters.createSavedFolderRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetSavedFolders200ResponseInnerFromJSON(jsonValue));
    }

    /**
     * Create a new saved folder for the current workspace
     */
    async createSavedFolder(requestParameters: CreateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSavedFolders200ResponseInner> {
        const response = await this.createSavedFolderRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete a saved folder by id
     */
    async deleteSavedFolderRaw(requestParameters: DeleteSavedFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteSavedFolder.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/workspace/saved-folders/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete a saved folder by id
     */
    async deleteSavedFolder(requestParameters: DeleteSavedFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteSavedFolderRaw(requestParameters, initOverrides);
    }

    /**
     * Get saved folders for the current workspace and user
     */
    async getSavedFoldersRaw(requestParameters: GetSavedFoldersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetSavedFolders200ResponseInner>>> {
        const queryParameters: any = {};

        if (requestParameters.parentId !== undefined) {
            queryParameters['parentId'] = requestParameters.parentId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/workspace/saved-folders/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetSavedFolders200ResponseInnerFromJSON));
    }

    /**
     * Get saved folders for the current workspace and user
     */
    async getSavedFolders(requestParameters: GetSavedFoldersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetSavedFolders200ResponseInner>> {
        const response = await this.getSavedFoldersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update a saved folder by id
     */
    async updateSavedFolderRaw(requestParameters: UpdateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSavedFolders200ResponseInner>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateSavedFolder.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/workspace/saved-folders/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateSavedFolderRequestToJSON(requestParameters.updateSavedFolderRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetSavedFolders200ResponseInnerFromJSON(jsonValue));
    }

    /**
     * Update a saved folder by id
     */
    async updateSavedFolder(requestParameters: UpdateSavedFolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSavedFolders200ResponseInner> {
        const response = await this.updateSavedFolderRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
