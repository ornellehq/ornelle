/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateCandidateRequest,
  GetApplications200ResponseInnerCandidate,
  GetApplicationsSortsParameterInner,
  GetCandidates200ResponseInner,
  UpdateACandidateRequest,
} from '../models';
import {
    CreateCandidateRequestFromJSON,
    CreateCandidateRequestToJSON,
    GetApplications200ResponseInnerCandidateFromJSON,
    GetApplications200ResponseInnerCandidateToJSON,
    GetApplicationsSortsParameterInnerFromJSON,
    GetApplicationsSortsParameterInnerToJSON,
    GetCandidates200ResponseInnerFromJSON,
    GetCandidates200ResponseInnerToJSON,
    UpdateACandidateRequestFromJSON,
    UpdateACandidateRequestToJSON,
} from '../models';

export interface CreateCandidateOperationRequest {
    createCandidateRequest: CreateCandidateRequest;
}

export interface GetCandidateRequest {
    id: string;
}

export interface GetCandidatesRequest {
    filters?: Array<object>;
    sorts?: Array<GetApplicationsSortsParameterInner>;
    include?: any;
}

export interface UpdateACandidateOperationRequest {
    id: string;
    updateACandidateRequest?: UpdateACandidateRequest;
}

/**
 * CandidateApi - interface
 * 
 * @export
 * @interface CandidateApiInterface
 */
export interface CandidateApiInterface {
    /**
     * Creates a candidate in the current workspace
     * @param {CreateCandidateRequest} createCandidateRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CandidateApiInterface
     */
    createCandidateRaw(requestParameters: CreateCandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplications200ResponseInnerCandidate>>;

    /**
     * Creates a candidate in the current workspace
     */
    createCandidate(requestParameters: CreateCandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplications200ResponseInnerCandidate>;

    /**
     * Returns a candidate by ID
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CandidateApiInterface
     */
    getCandidateRaw(requestParameters: GetCandidateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplications200ResponseInnerCandidate>>;

    /**
     * Returns a candidate by ID
     */
    getCandidate(requestParameters: GetCandidateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplications200ResponseInnerCandidate>;

    /**
     * Returns the current workspace\'s candidates
     * @param {Array<object>} [filters] 
     * @param {Array<GetApplicationsSortsParameterInner>} [sorts] 
     * @param {any} [include] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CandidateApiInterface
     */
    getCandidatesRaw(requestParameters: GetCandidatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetCandidates200ResponseInner>>>;

    /**
     * Returns the current workspace\'s candidates
     */
    getCandidates(requestParameters: GetCandidatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetCandidates200ResponseInner>>;

    /**
     * Updates a candidate in the current workspace
     * @param {string} id 
     * @param {UpdateACandidateRequest} [updateACandidateRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CandidateApiInterface
     */
    updateACandidateRaw(requestParameters: UpdateACandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplications200ResponseInnerCandidate>>;

    /**
     * Updates a candidate in the current workspace
     */
    updateACandidate(requestParameters: UpdateACandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplications200ResponseInnerCandidate>;

}

/**
 * 
 */
export class CandidateApi extends runtime.BaseAPI implements CandidateApiInterface {

    /**
     * Creates a candidate in the current workspace
     */
    async createCandidateRaw(requestParameters: CreateCandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplications200ResponseInnerCandidate>> {
        if (requestParameters.createCandidateRequest === null || requestParameters.createCandidateRequest === undefined) {
            throw new runtime.RequiredError('createCandidateRequest','Required parameter requestParameters.createCandidateRequest was null or undefined when calling createCandidate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/workspace/candidates/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCandidateRequestToJSON(requestParameters.createCandidateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetApplications200ResponseInnerCandidateFromJSON(jsonValue));
    }

    /**
     * Creates a candidate in the current workspace
     */
    async createCandidate(requestParameters: CreateCandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplications200ResponseInnerCandidate> {
        const response = await this.createCandidateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns a candidate by ID
     */
    async getCandidateRaw(requestParameters: GetCandidateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplications200ResponseInnerCandidate>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getCandidate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/workspace/candidates/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetApplications200ResponseInnerCandidateFromJSON(jsonValue));
    }

    /**
     * Returns a candidate by ID
     */
    async getCandidate(requestParameters: GetCandidateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplications200ResponseInnerCandidate> {
        const response = await this.getCandidateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the current workspace\'s candidates
     */
    async getCandidatesRaw(requestParameters: GetCandidatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetCandidates200ResponseInner>>> {
        const queryParameters: any = {};

        if (requestParameters.filters) {
            queryParameters['filters'] = requestParameters.filters;
        }

        if (requestParameters.sorts) {
            queryParameters['sorts'] = requestParameters.sorts;
        }

        if (requestParameters.include !== undefined) {
            queryParameters['include'] = requestParameters.include;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/workspace/candidates/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetCandidates200ResponseInnerFromJSON));
    }

    /**
     * Returns the current workspace\'s candidates
     */
    async getCandidates(requestParameters: GetCandidatesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetCandidates200ResponseInner>> {
        const response = await this.getCandidatesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates a candidate in the current workspace
     */
    async updateACandidateRaw(requestParameters: UpdateACandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplications200ResponseInnerCandidate>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateACandidate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/workspace/candidates/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateACandidateRequestToJSON(requestParameters.updateACandidateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetApplications200ResponseInnerCandidateFromJSON(jsonValue));
    }

    /**
     * Updates a candidate in the current workspace
     */
    async updateACandidate(requestParameters: UpdateACandidateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplications200ResponseInnerCandidate> {
        const response = await this.updateACandidateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
