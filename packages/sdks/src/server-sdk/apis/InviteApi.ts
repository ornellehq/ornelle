/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.15.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CreateInvite200Response, CreateInviteRequest } from "../models"
import {
  CreateInvite200ResponseFromJSON,
  CreateInvite200ResponseToJSON,
  CreateInviteRequestFromJSON,
  CreateInviteRequestToJSON,
} from "../models"
import * as runtime from "../runtime"

export interface CreateInviteOperationRequest {
  createInviteRequest: CreateInviteRequest
}

/**
 * InviteApi - interface
 *
 * @export
 * @interface InviteApiInterface
 */
export interface InviteApiInterface {
  /**
   * Creates an invite for the current workspace and sends email to the invitee
   * @param {CreateInviteRequest} createInviteRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof InviteApiInterface
   */
  createInviteRaw(
    requestParameters: CreateInviteOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<CreateInvite200Response>>

  /**
   * Creates an invite for the current workspace and sends email to the invitee
   */
  createInvite(
    requestParameters: CreateInviteOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<CreateInvite200Response>
}

/**
 *
 */
export class InviteApi extends runtime.BaseAPI implements InviteApiInterface {
  /**
   * Creates an invite for the current workspace and sends email to the invitee
   */
  async createInviteRaw(
    requestParameters: CreateInviteOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<CreateInvite200Response>> {
    if (
      requestParameters.createInviteRequest === null ||
      requestParameters.createInviteRequest === undefined
    ) {
      throw new runtime.RequiredError(
        "createInviteRequest",
        "Required parameter requestParameters.createInviteRequest was null or undefined when calling createInvite.",
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters["Content-Type"] = "application/json"

    if (this.configuration && this.configuration.apiKey) {
      headerParameters["Authorization"] =
        this.configuration.apiKey("Authorization") // permissions authentication
    }

    const response = await this.request(
      {
        path: `/workspace/invites/`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: CreateInviteRequestToJSON(requestParameters.createInviteRequest),
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateInvite200ResponseFromJSON(jsonValue),
    )
  }

  /**
   * Creates an invite for the current workspace and sends email to the invitee
   */
  async createInvite(
    requestParameters: CreateInviteOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<CreateInvite200Response> {
    const response = await this.createInviteRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }
}
